HTML : 하이퍼 텍스트 마크업 언어 = 뼈대
CSS : 캐스팅 스타일 시트         = 옷
JS  : 자바스크립트               = 행동/동작

[JS]
    JavaScript
    - 요즘 트렌드에서 자바스크립트 매우 중요한 역할.
    1. 웰 클라이언트(HTML,CSS,JS)
    2. 웹 서버(node.js)
    3. 모바일(react.js native)
    4. 소프트웨어(NW.js)

[JS 사용하는 방법]
    방법1 : html 파일내 <body> 마크업 안에서 <script> 마크업 사용.
        <body>
            <script>
                js코드 작성
            </script>
        </body>    
    
    방법2(권장) : JS파일(.js) 생성하여 <head> 또는 <body> 마크업에서 js파일 불러온다.
        <head>
            <script src="js파일경로"></script>
        <head>

[데이터]
    - 데이터란? 한국어로는 자료, 컴퓨터언어가 이해하는 자료들, 리터럴
    1. 숫자 : 10, 3.14, 555 등등
    2. 문자 : '안녕' "안녕", `안녕`
    3. 논리 : true, false
    
[JS타입 / 자료형 / 분류]
    - 데이터들을 특정한 기준으로 분류한 것.
    - 기본타입
        1. 숫자타입 : Number    ex) 10, 3,14,53718
        2. 문자타입 : String    ex) '작은따옴표' 또는 "큰따옴표" 또는 `백틱`으로 감싼 자료
        3. 논리타입 : Boolean   ex) true, false

[JS 출력함수]
    1. console.log(출력할 값 또는 연산식) : 브라우저의 F12(개발자도구) 에서 

[JS 입력함수]
    1. prompt( )        : (팝업창) 알림 메시지와 입력(input) 기능 제공하는 함수.
    * 입력받은 값을 문자타입으로 반환 *  /  - 함수 1개당 입력창 1개개
        숫자 입력받기 : 1. Number(prompt()); - 타입변환환 - 문자 타입을 숫자 타입으로
                       2. 혹은  *1 
[이스케이프프/제어 문자]
    1. \n : 줄바꿈
    2. \t : 들여쓰기
    3. \\ : \ 한개 출력
    4. \' : '한개 출력
    5. \" : "한개 출력력

[변수와 상수]
    - 공통 : 
        1. 데이터 1개를 저장할 수 있는 메모리 공간
        2. 메모리 공간의 상징적인 이름이 존재한다. 변수명, 상수명
        3. 자바와 다르게 변수타입이 자동으로 관리, 타입 명시할 필요 X
            - let/const로 선언 후 모든 자료를 저장할 수 있다.
    1. 변수 : 변하는 수/값
        1. 변수 선언 : let 키워드
            let 변수명;             *값이 없는 변수 호출시 undefined
        2. 변수 초기화 : 변수 선언시 처음에 값 대입 행위
            let 변수명 = 초기값;
        3. 변수 값 호출 : 변수명을 작성하면 변수가 갖는 값이 반항된다.
            변수명
        4. 변수 값 수정 : 기존 변수명을 호출해서 새로운 값 대입
            변수명 = 새로운 값
        5. 변수 연산 
            변수명A + 데이터 + 변수명B

    2. 상수 : 변하지 않는 수/값
        1. 상수 선언 : const 키워드
            const 상수명 = 초기값; * 상수는 무조건 초기값을 넣어야한다.
        2. 상수 값 호출
            상수명;
        3. 상수 값 수정 X : 불가능,
        4. 상수 연산
            상수명A + 데이터 + 상수명B

[연산자]
    - 연산(계산) 결과를 *하나*로 도출 하는 과정
    - 연산(계산)에 사용되는 기호/특수문자
    - 종류
        1. 산술연산자           : +덧셈, -밸셈, *곱셈, /나눗셈, %나머지
        2. 연결연산자           : + 앞뒤에 문자가 존재하면 덧셈이 아닌 연결을 한다.
        3. 비교연산자           : >초과 <미만 >=이상 <=이하 ==(값)같다 !=(값)다르다 ===(타입과 값)같다 !===(타입과 값)다르다
        4. 관계연산자           : && -> and  ////  || -> or  ////  ! : 부정(반대로)
        
        5.복합대입연산자
            = 오른쪽 항(값)를 왼쪽 항(변수)에 대입한다.
            += 오른쪽 항(값)를 횐쪽 항값과 더한 후에 왼쪽 항 (변수)에 대입한다.
            -=,*=,/=,%=
        
        6. 증감연산자 : 변수명 앞뒤에 ++ 또는 --입력하여 변수의 1증가 또는 감소, 빠른연산산
            ++변수명    : 선위증가  ++변수명; 선위감소
            변수명++    : 후위증가  변수명--; 후위감소

            *주의할점 : 1. 특정 변수에 1증가 코드 작성하시오.
                let value = 10;
                방법1) value = value + 1;
                방법2) value += 1;
                방법3) value++;
            2. ;(세미콜론)명령단위 기준으로 우선순위를 정한다.
                ++value; vs value++; ->                           결과 동일
                console.log(++value); vs console.log(value++); -> 결과 다름.

        7. 삼항연산자자 : 항이 3개라서 삼항연산자라고 한다.
            - 첫번째 항 : 조건을 넣는다.  두번째 항 : true일때 코드   세번째 항 : false일때코드
            - 조건 ? 참 : 거짓
            - (중첩) 조건1 ? 참1 : 조건2 ? 참2 : 거짓
                - 주로 간단한/짧은 논리조건은 삼함연산자, 복잡한조건은 IF조건 사용
                - react.js 의 조건부렌더링에서 주로 사용된다.

        , parseInt( 나누기 ) - 몫